Index: interfata5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom tkinter import filedialog\r\nfrom tkinter import ttk\r\nimport pandas as pd\r\nimport os\r\n\r\n# Placeholder DataFrame\r\ndf = pd.DataFrame({'Tambur': [], 'KG/Rola': []})\r\ninitial_headers = []\r\n\r\n\r\ndef display_selected_data(selected_tambur):\r\n    global df\r\n    selected_data = df[(df['Tambur'] == selected_tambur) & (df['KG/Rola'] > 0)]\r\n    if 'Nr.InternRola' in df.columns:\r\n        selected_data_table.delete(*selected_data_table.get_children())\r\n        for index, row in selected_data[['Nr.InternRola', 'KG/Rola']].iterrows():\r\n            selected_data_table.insert(\"\", tk.END, values=tuple(row))\r\n    else:\r\n        print(\"'Nr.InternRola' column not found in DataFrame\")\r\n\r\n\r\ndef update_value():\r\n    global df\r\n    selected_items = selected_data_table.selection()\r\n    new_value = new_kg_rola.get()\r\n    if selected_items and new_value.strip():\r\n        new_value = int(new_value)\r\n        for selected_item in selected_items:\r\n            item_values = selected_data_table.item(selected_item, 'values')\r\n            selected_nr_intern_rola = item_values[0]\r\n            selected_kg_rola = item_values[1]\r\n            initial_index = df[(df['Nr.InternRola'] == selected_nr_intern_rola) & (df['KG/Rola'] == float(selected_kg_rola))].index\r\n            if len(initial_index) > 0:\r\n                # Get the first index if available\r\n                initial_index = initial_index[0]\r\n                df.loc[initial_index, 'KG/Rola'] = new_value\r\n                display_selected_data(tambur_var.get())\r\n\r\n        df.to_excel(r\"C:\\Users\\User\\Desktop\\Stoc Role 2022.xlsx\", index=False, columns=initial_headers)\r\n\r\n\r\ndef open_excel():\r\n    global df\r\n    global initial_headers\r\n    file_path = filedialog.askopenfilename(filetypes=[(\"Excel files\", \"*.xlsx;*.xls\")])\r\n    if file_path:\r\n        df = pd.read_excel(file_path)\r\n        initial_headers = df.columns.tolist()  # Get the initial column headers\r\n        tambur_options = df['Tambur'].unique().tolist()\r\n        tambur_var.set('Select Tambur')\r\n        tambur_dropdown['menu'].delete(0, 'end')\r\n        for option in tambur_options:\r\n            tambur_dropdown['menu'].add_command(label=option, command=tk._setit(tambur_var, option))\r\n        tambur_dropdown.config(state=\"normal\")\r\n        tambur_var.trace('w', lambda *args: display_selected_data(tambur_var.get()))\r\n\r\nfile_path = r\"C:\\Users\\User\\Desktop\\Stoc Role 2022.xlsx\"\r\nif os.path.exists(file_path) and not df.empty:\r\n    df.to_excel(file_path, index=False)\r\n\r\n# GUI Setup\r\nroot = tk.Tk()\r\nroot.title(\"Excel Data Viewer\")\r\ntambur_var = tk.StringVar(root)\r\ntambur_var.set('Select Tambur')\r\ntambur_dropdown = tk.OptionMenu(root, tambur_var, 'Select Tambur')\r\ntambur_dropdown.pack()\r\nbtn_open_excel = tk.Button(root, text=\"Open Excel File\", command=open_excel)\r\nbtn_open_excel.pack()\r\nselected_data_table = ttk.Treeview(root, columns=('Nr.InternRola', 'KG/Rola'), show='headings')\r\nselected_data_table.heading('Nr.InternRola', text='Nr.InternRola')\r\nselected_data_table.heading('KG/Rola', text='KG/Rola')\r\nselected_data_table.pack(padx=60, pady=60)\r\n\r\n# Add grid lines\r\nselected_data_table.tag_configure('oddrow', background='white')\r\nselected_data_table.tag_configure('evenrow', background='lightgray')\r\n\r\nnew_kg_rola = tk.StringVar(root)\r\nentry_value = tk.Entry(root, textvariable=new_kg_rola)\r\nentry_value.pack()\r\nupdate_btn = tk.Button(root, text=\"Update\", command=update_value)\r\nupdate_btn.pack()\r\nstyle = ttk.Style(root)\r\nstyle.configure(\"Treeview\", rowheight=25, font=('Arial', 15))\r\nstyle.configure(\"Treeview.Heading\", font=('Arial', 20, 'bold'))\r\nstyle.layout(\"Treeview\", [('Treeview.treearea', {'sticky': 'nswe'})])\r\n\r\nroot.mainloop()\r\n# Versiune 2023/12/17 - 21.38\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/interfata5.py b/interfata5.py
--- a/interfata5.py	(revision ecdca49906225f3e533f62747e7bc461ddcb1bc8)
+++ b/interfata5.py	(date 1703100934430)
@@ -5,10 +5,9 @@
 import os
 
 # Placeholder DataFrame
-df = pd.DataFrame({'Tambur': [], 'KG/Rola': []})
+df = pd.DataFrame({'Tambur': [], 'KG/Rola': [], 'Grosime': []})
 initial_headers = []
 
-
 def display_selected_data(selected_tambur):
     global df
     selected_data = df[(df['Tambur'] == selected_tambur) & (df['KG/Rola'] > 0)]
@@ -19,6 +18,13 @@
     else:
         print("'Nr.InternRola' column not found in DataFrame")
 
+def update_tambur_options(selected_grosime):
+    global df
+    tambur_options = df[df['Grosime'] == selected_grosime]['Tambur'].unique().tolist()
+    tambur_var.set('Select Tambur')
+    menu_tambur.delete(0, 'end')  # Correct deletion of menu items
+    for option in tambur_options:
+        menu_tambur.add_command(label=option, command=tk._setit(tambur_var, option))
 
 def update_value():
     global df
@@ -32,60 +38,86 @@
             selected_kg_rola = item_values[1]
             initial_index = df[(df['Nr.InternRola'] == selected_nr_intern_rola) & (df['KG/Rola'] == float(selected_kg_rola))].index
             if len(initial_index) > 0:
-                # Get the first index if available
                 initial_index = initial_index[0]
                 df.loc[initial_index, 'KG/Rola'] = new_value
                 display_selected_data(tambur_var.get())
-
         df.to_excel(r"C:\Users\User\Desktop\Stoc Role 2022.xlsx", index=False, columns=initial_headers)
 
-
 def open_excel():
-    global df
-    global initial_headers
+    global df, initial_headers
     file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx;*.xls")])
     if file_path:
         df = pd.read_excel(file_path)
-        initial_headers = df.columns.tolist()  # Get the initial column headers
-        tambur_options = df['Tambur'].unique().tolist()
+        initial_headers = df.columns.tolist()
+        grosime_options = df['Grosime'].unique().tolist()
+        grosime_var.set('Select Grosime')
+        menu_grosime.delete(0, 'end')  # Correct deletion of menu items
+        for option in grosime_options:
+            menu_grosime.add_command(label=str(option), command=tk._setit(grosime_var, str(option)))
+        grosime_dropdown.config(state="normal")
+        grosime_var.trace('w', lambda *args: filter_data(grosime_var.get()))
+
+def filter_data(selected_grosime):
+    global df
+    if selected_grosime != 'Select Grosime':
+        filtered_df = df[df['Grosime'] == selected_grosime]
+        tambur_options = filtered_df['Tambur'].unique().tolist()
         tambur_var.set('Select Tambur')
-        tambur_dropdown['menu'].delete(0, 'end')
+        menu_tambur.delete(0, 'end')  # Correct deletion of menu items
         for option in tambur_options:
-            tambur_dropdown['menu'].add_command(label=option, command=tk._setit(tambur_var, option))
+            menu_tambur.add_command(label=str(option), command=tk._setit(tambur_var, str(option)))
         tambur_dropdown.config(state="normal")
         tambur_var.trace('w', lambda *args: display_selected_data(tambur_var.get()))
 
+
 file_path = r"C:\Users\User\Desktop\Stoc Role 2022.xlsx"
 if os.path.exists(file_path) and not df.empty:
     df.to_excel(file_path, index=False)
 
-# GUI Setup
+# GUI Setup (update here to include filtering by Grosime)
 root = tk.Tk()
-root.title("Excel Data Viewer")
+root.title("Registru role")
+
+frame = tk.Frame(root)
+frame.pack()
+
+grosime_var = tk.StringVar(root)
+grosime_var.set('Select Grosime')
+grosime_dropdown = tk.Menubutton(frame, textvariable=grosime_var, width=20)
+grosime_dropdown.grid(row=0, column=0)
+
 tambur_var = tk.StringVar(root)
 tambur_var.set('Select Tambur')
-tambur_dropdown = tk.OptionMenu(root, tambur_var, 'Select Tambur')
-tambur_dropdown.pack()
-btn_open_excel = tk.Button(root, text="Open Excel File", command=open_excel)
-btn_open_excel.pack()
-selected_data_table = ttk.Treeview(root, columns=('Nr.InternRola', 'KG/Rola'), show='headings')
-selected_data_table.heading('Nr.InternRola', text='Nr.InternRola')
-selected_data_table.heading('KG/Rola', text='KG/Rola')
-selected_data_table.pack(padx=60, pady=60)
+tambur_dropdown = tk.Menubutton(frame, textvariable=tambur_var, width=20)
+tambur_dropdown.grid(row=0, column=1)
+
+menu_grosime = tk.Menu(grosime_dropdown, tearoff=False)
+grosime_dropdown.configure(menu=menu_grosime)
 
-# Add grid lines
-selected_data_table.tag_configure('oddrow', background='white')
-selected_data_table.tag_configure('evenrow', background='lightgray')
+menu_tambur = tk.Menu(tambur_dropdown, tearoff=False)
+tambur_dropdown.configure(menu=menu_tambur)
+
+btn_open_excel = tk.Button(frame, text="Deschide fisierul Excel", command=open_excel, height=3, width=20)
+btn_open_excel.grid(row=1, column=0)
+
+update_btn = tk.Button(frame, text="Update", command=update_value, height=3, width=20)
+update_btn.grid(row=1, column=1)
 
 new_kg_rola = tk.StringVar(root)
 entry_value = tk.Entry(root, textvariable=new_kg_rola)
 entry_value.pack()
-update_btn = tk.Button(root, text="Update", command=update_value)
-update_btn.pack()
+
 style = ttk.Style(root)
 style.configure("Treeview", rowheight=25, font=('Arial', 15))
 style.configure("Treeview.Heading", font=('Arial', 20, 'bold'))
 style.layout("Treeview", [('Treeview.treearea', {'sticky': 'nswe'})])
 
-root.mainloop()
-# Versiune 2023/12/17 - 21.38
+selected_data_table = ttk.Treeview(root, columns=('Nr.InternRola', 'KG/Rola'), show='headings')
+selected_data_table.heading('Nr.InternRola', text='Nr.InternRola')
+selected_data_table.heading('KG/Rola', text='KG/Rola')
+selected_data_table.pack(padx=60, pady=60)
+
+selected_data_table.tag_configure('oddrow', background='green')
+selected_data_table.tag_configure('evenrow', background='lightgray')
+
+root.mainloop()
\ No newline at end of file
Index: interfata4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom tkinter import filedialog\r\nfrom tkinter import ttk\r\nimport pandas as pd\r\nimport os\r\n\r\n# Placeholder DataFrame\r\ndf = pd.DataFrame({'Tambur': [], 'KG / Rola': [], 'New KG / Rola': []})\r\n\r\ndef display_selected_data(selected_tambur):\r\n    global df\r\n    selected_data = df[(df['Tambur'] == selected_tambur) & (df['KG / Rola'] > 0)]\r\n    if 'Nr. Intern Rola' in df.columns:\r\n        selected_data_table.delete(*selected_data_table.get_children())\r\n        for index, row in selected_data[['Nr. Intern Rola', 'KG / Rola']].iterrows():\r\n            selected_data_table.insert(\"\", tk.END, values=tuple(row))\r\n    else:\r\n        print(\"'Nr. Intern Rola' column not found in DataFrame\")\r\n\r\n\r\ndef update_value():\r\n    global df\r\n    selected_items = selected_data_table.selection()\r\n    new_value = new_kg_rola.get()\r\n    if selected_items and new_value.strip():\r\n        new_value = int(new_value)\r\n        for selected_item in selected_items:\r\n            item_values = selected_data_table.item(selected_item, 'values')\r\n            df.at[selected_item, 'KG / Rola'] = new_value  # Replace 'KG / Rola' with the new value\r\n            df.at[selected_item, 'New KG / Rola'] = new_value\r\n            display_selected_data(item_values[0])\r\n\r\n        # Save the modified DataFrame back to the Excel file\r\n        if os.path.exists(file_path):\r\n            with pd.ExcelWriter(file_path, mode='a', engine='openpyxl', if_sheet_exists='replace') as writer:\r\n                df.to_excel(writer, index=False, header=False)\r\n        else:\r\n            print(\"The file does not exist.\")\r\n\r\n# Rest of the code remains unchanged\r\n\r\n\r\n# Rest of the code remains unchanged\r\n\r\n\r\ndef add_value():\r\n    global df\r\n    new_value = new_kg_rola.get()\r\n    tambur = tambur_var.get()\r\n    if new_value.strip():\r\n        new_value = int(new_value)\r\n        new_row = pd.Series({'Tambur': tambur, 'KG / Rola': 0, 'New KG / Rola': new_value})\r\n        df = df.append(new_row, ignore_index=True)\r\n        display_selected_data(tambur)\r\n\r\ndef open_excel():\r\n    global df\r\n    global tambur_dropdown\r\n\r\n    file_path = filedialog.askopenfilename(filetypes=[(\"Excel files\", \"*.xlsx;*.xls\")])\r\n    if file_path:\r\n        df = pd.read_excel(file_path)\r\n        tambur_options = df['Tambur'].unique().tolist()\r\n        print(tambur_options)  # Check the contents of tambur_options\r\n\r\n        tambur_var.set('Select Tambur')\r\n        tambur_dropdown['menu'].delete(0, 'end')\r\n        for option in tambur_options:\r\n            tambur_dropdown['menu'].add_command(label=option, command=tk._setit(tambur_var, option))\r\n        tambur_dropdown.config(state=\"normal\")\r\n        tambur_var.trace('w', lambda *args: display_selected_data(tambur_var.get()))\r\n\r\n# Check if the Excel file exists\r\nfile_path = r\"C:\\Users\\User\\Desktop\\Stoc Role 2022.xlsx\"\r\nif os.path.exists(file_path):\r\n    df = pd.read_excel(file_path)\r\n\r\nroot = tk.Tk()\r\nroot.title(\"Excel Data Viewer\")\r\n\r\ntambur_var = tk.StringVar(root)\r\ntambur_var.set('Select Tambur')\r\ntambur_dropdown = tk.OptionMenu(root, tambur_var, 'Select Tambur')\r\ntambur_dropdown.pack()\r\n\r\nbtn_open_excel = tk.Button(root, text=\"Open Excel File\", command=open_excel)\r\nbtn_open_excel.pack()\r\n\r\nselected_data_table = ttk.Treeview(root, columns=('Nr. Intern Rola', 'KG / Rola', 'New KG / Rola'), show='headings')\r\nselected_data_table.heading('Nr. Intern Rola', text='Nr. Intern Rola')\r\nselected_data_table.heading('KG / Rola', text='KG / Rola')\r\nselected_data_table.heading('New KG / Rola', text='New KG / Rola')\r\nselected_data_table.pack(padx=20, pady=20)\r\n\r\nnew_kg_rola = tk.StringVar(root)\r\nentry_value = tk.Entry(root, textvariable=new_kg_rola)\r\nentry_value.pack()\r\n\r\nupdate_btn = tk.Button(root, text=\"Update\", command=update_value)\r\nupdate_btn.pack()\r\n\r\nadd_btn = tk.Button(root, text=\"Add\", command=add_value)\r\nadd_btn.pack()\r\n\r\nstyle = ttk.Style(root)\r\nstyle.configure(\"Treeview\", rowheight=25, font=('Arial', 10))\r\nstyle.configure(\"Treeview.Heading\", font=('Arial', 10, 'bold'))\r\nstyle.layout(\"Treeview\", [('Treeview.treearea', {'sticky': 'nswe'})])\r\n\r\nroot.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/interfata4.py b/interfata4.py
--- a/interfata4.py	(revision ecdca49906225f3e533f62747e7bc461ddcb1bc8)
+++ b/interfata4.py	(date 1703100937203)
@@ -4,9 +4,14 @@
 import pandas as pd
 import os
 
+
 # Placeholder DataFrame
 df = pd.DataFrame({'Tambur': [], 'KG / Rola': [], 'New KG / Rola': []})
 
+# Placeholder for initial headers
+initial_headers = []
+
+# Function to display selected data
 def display_selected_data(selected_tambur):
     global df
     selected_data = df[(df['Tambur'] == selected_tambur) & (df['KG / Rola'] > 0)]
@@ -17,7 +22,7 @@
     else:
         print("'Nr. Intern Rola' column not found in DataFrame")
 
-
+# Function to update values
 def update_value():
     global df
     selected_items = selected_data_table.selection()
@@ -26,23 +31,20 @@
         new_value = int(new_value)
         for selected_item in selected_items:
             item_values = selected_data_table.item(selected_item, 'values')
-            df.at[selected_item, 'KG / Rola'] = new_value  # Replace 'KG / Rola' with the new value
-            df.at[selected_item, 'New KG / Rola'] = new_value
-            display_selected_data(item_values[0])
-
-        # Save the modified DataFrame back to the Excel file
-        if os.path.exists(file_path):
-            with pd.ExcelWriter(file_path, mode='a', engine='openpyxl', if_sheet_exists='replace') as writer:
-                df.to_excel(writer, index=False, header=False)
-        else:
-            print("The file does not exist.")
+            selected_tambur = item_values[0]
+            initial_index = df[df['Tambur'] == selected_tambur].index
+            if len(initial_index) > 0:
+                # Get the first index if available
+                initial_index = initial_index[0]
+                df.loc[initial_index, 'KG / Rola'] = new_value
+                df.loc[initial_index, 'New KG / Rola'] = new_value
+                display_selected_data(selected_tambur)
 
-# Rest of the code remains unchanged
+        df.to_excel(r"C:\Users\User\Desktop\Stoc Role 2022.xlsx", index=False, columns=initial_headers)
 
 
-# Rest of the code remains unchanged
 
-
+# Function to add values
 def add_value():
     global df
     new_value = new_kg_rola.get()
@@ -53,16 +55,15 @@
         df = df.append(new_row, ignore_index=True)
         display_selected_data(tambur)
 
+# Function to open Excel
 def open_excel():
     global df
-    global tambur_dropdown
-
+    global initial_headers
     file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx;*.xls")])
     if file_path:
         df = pd.read_excel(file_path)
+        initial_headers = df.columns.tolist()  # Get the initial column headers
         tambur_options = df['Tambur'].unique().tolist()
-        print(tambur_options)  # Check the contents of tambur_options
-
         tambur_var.set('Select Tambur')
         tambur_dropdown['menu'].delete(0, 'end')
         for option in tambur_options:
@@ -70,11 +71,16 @@
         tambur_dropdown.config(state="normal")
         tambur_var.trace('w', lambda *args: display_selected_data(tambur_var.get()))
 
-# Check if the Excel file exists
+# Initial file path
 file_path = r"C:\Users\User\Desktop\Stoc Role 2022.xlsx"
-if os.path.exists(file_path):
-    df = pd.read_excel(file_path)
+
+# Check if the file exists and write the initial DataFrame
+# Check if the file exists and write the initial DataFrame if it's not empty
+if os.path.exists(file_path) and not df.empty:
+    df.to_excel(file_path, index=False)
 
+
+# GUI Setup
 root = tk.Tk()
 root.title("Excel Data Viewer")
 
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a sample Python script.\r\n\r\n# Press Shift+F10 to execute it or replace it with your code.\r\n# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.\r\n\r\n\r\ndef print_hi(name):\r\n    # Use a breakpoint in the code line below to debug your script.\r\n    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.\r\n\r\n\r\n# Press the green button in the gutter to run the script.\r\nif __name__ == '__main__':\r\n    print_hi('PyCharm')\r\n\r\n# See PyCharm help at https://www.jetbrains.com/help/pycharm/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision ecdca49906225f3e533f62747e7bc461ddcb1bc8)
+++ b/main.py	(date 1703100939934)
@@ -1,16 +1,0 @@
-# This is a sample Python script.
-
-# Press Shift+F10 to execute it or replace it with your code.
-# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
-
-
-def print_hi(name):
-    # Use a breakpoint in the code line below to debug your script.
-    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.
-
-
-# Press the green button in the gutter to run the script.
-if __name__ == '__main__':
-    print_hi('PyCharm')
-
-# See PyCharm help at https://www.jetbrains.com/help/pycharm/
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Uncommitted_changes_before_rebase_[Changes]1\" date=\"1702830957201\" recycled=\"true\" deleted=\"true\">\r\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch\" />\r\n  <option name=\"DESCRIPTION\" value=\"Uncommitted changes before rebase [Changes]\" />\r\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml	(revision ecdca49906225f3e533f62747e7bc461ddcb1bc8)
+++ b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml	(date 1703101269617)
@@ -1,4 +1,4 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]1" date="1702830957201" recycled="true" deleted="true">
+<changelist name="Uncommitted_changes_before_rebase_[Changes]1" date="1703101128259" recycled="true">
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch" />
   <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
 </changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"cdf63800-b5f7-46f0-8b04-54f4afe0bd9a\" name=\"Changes\" comment=\"initial commit&#10;&#10;Signed-off-by: Razvan Viorel Silisteanu &lt;razvan@mexi.ro&gt;\">\r\n      <changelist_data name=\"Razvan\" email=\"\" />\r\n      <change afterPath=\"$PROJECT_DIR$/interfata6.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Changes.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Changes.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Razvan\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZfJBJC81uM9iYzPPJtjv0QMVrX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.interfata4.executor\": \"Run\",\r\n    \"Python.interfata5.executor\": \"Run\",\r\n    \"Python.interfata6.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/PyCharm Community Edition 2023.2.2/Interfata-Role\",\r\n    \"settings.editor.selected.configurable\": \"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\PyCharm Community Edition 2023.2.2\\Interfata-Role\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"interfata5\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Interfata Role\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.12 (ITS---Project1) (2)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/interfata5.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"interfata6\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Interfata Role\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.12 (ITS---Project1) (2)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/interfata6.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Interfata Role\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\User\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"cdf63800-b5f7-46f0-8b04-54f4afe0bd9a\" name=\"Changes\" comment=\"\" />\r\n      <created>1702807063930</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702807063930</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$\" />\r\n    </ignored-roots>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <line>8</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ecdca49906225f3e533f62747e7bc461ddcb1bc8)
+++ b/.idea/workspace.xml	(date 1703101429128)
@@ -6,11 +6,12 @@
   <component name="ChangeListManager">
     <list default="true" id="cdf63800-b5f7-46f0-8b04-54f4afe0bd9a" name="Changes" comment="initial commit&#10;&#10;Signed-off-by: Razvan Viorel Silisteanu &lt;razvan@mexi.ro&gt;">
       <changelist_data name="Razvan" email="" />
-      <change afterPath="$PROJECT_DIR$/interfata6.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Changes.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Changes.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Stoc Role 2022.xlsx" beforeDir="false" afterPath="$PROJECT_DIR$/Stoc Role 2022.xlsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/interfata4.py" beforeDir="false" afterPath="$PROJECT_DIR$/interfata4.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/interfata5.py" beforeDir="false" afterPath="$PROJECT_DIR$/interfata5.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/interfata6.py" beforeDir="false" afterPath="$PROJECT_DIR$/Interfata Role/interfata6.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -22,9 +23,28 @@
       <list>
         <option value="Razvan" />
       </list>
+    </option>
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Dev" />
+      </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="SIGN_OFF_COMMIT" value="true" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN",
+    "assignee": "Silir81"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="42bcb8ad-34be-46df-a2e0-8054e874cc5a" />
+        <option name="url" value="https://github.com/Silir81/Interfata-Role.git" />
+      </UrlAndAccount>
+    </option>
   </component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
@@ -38,20 +58,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Python.interfata4.executor": "Run",
-    "Python.interfata5.executor": "Run",
-    "Python.interfata6.executor": "Run",
-    "Python.main.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
-    "ignore.virus.scanning.warn.message": "true",
-    "last_opened_file_path": "C:/PyCharm Community Edition 2023.2.2/Interfata-Role",
-    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Python.interfata4.executor&quot;: &quot;Run&quot;,
+    &quot;Python.interfata5.executor&quot;: &quot;Run&quot;,
+    &quot;Python.interfata6.executor&quot;: &quot;Run&quot;,
+    &quot;Python.main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/PyCharm Community Edition 2023.2.2/Interfata-Role&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\PyCharm Community Edition 2023.2.2\Interfata-Role" />
@@ -67,7 +87,6 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="SDK_NAME" value="Python 3.12 (ITS---Project1) (2)" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
@@ -90,7 +109,6 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="SDK_NAME" value="Python 3.12 (ITS---Project1) (2)" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
@@ -159,7 +177,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="master" />
+                        <option value="origin/master" />
                       </list>
                     </value>
                   </entry>
@@ -180,7 +198,7 @@
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/main.py</url>
+          <url>file://$PROJECT_DIR$/Interfata Role/main.py</url>
           <line>8</line>
           <option name="timeStamp" value="1" />
         </line-breakpoint>
diff --git a/interfata6.py b/Interfata Role/interfata6.py
rename from interfata6.py
rename to Interfata Role/interfata6.py
